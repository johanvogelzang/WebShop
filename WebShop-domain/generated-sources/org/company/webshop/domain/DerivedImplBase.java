
/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:11 CEST 2011
 *     Application model: Derived
 *     Generator        : Mod4j BusinessDomainDsl generator: NewJavaBean.xpt
 */

package org.company.webshop.domain;

import org.joda.time.DateTime;
import org.mod4j.runtime.validation.BusinessRuleValidationSupport;

/**
 * Test derived attributes
 *
 * @author Generated by Mod4j BusinessDomain DSL
 */
@SuppressWarnings("serial")
public abstract class DerivedImplBase implements java.io.Serializable {

	/**
	 * validation : Responsible for validating attribute constraints and businessrules for this business class.
	 * 
	 */
	protected BusinessRuleValidationSupport validation = new BusinessRuleValidationSupport(
			this);

	/**
	 *  id: The identifier of this object.
	 */
	private Long id;

	/**
	 *
	 * @return id (Long) The identifier of this object.
	 */
	public Long getId() {
		return this.id;
	}

	/**
	 * version: The version of this object 
	 */
	private int version = -1;

	/**
	 * @return version (Integer) The version of this object.
	 */
	public Integer getVersion() {
		return this.version;
	}

	/**
	 * toString method for DerivedImplBase
	 */
	@Override
	public String toString() {
		StringBuffer result = new StringBuffer();
		result.append("org.company.webshop.domain.Derived[");
		result.append("id=");
		result.append(getId());
		result.append(",");
		result.append("version=");
		result.append(getVersion());

		result.append("]");
		return result.toString();
	}

	private void addValidators() {

	}

	/**
	 * Minimal constructor for DerivedImplBase
	 *
	 */
	public DerivedImplBase(

	) {

		addValidators();
		validation.validate();
	}

	/**
	 * @param secondo (Boolean) 
	 */
	abstract public void setSecondo(final Boolean secondo);

	/**
	 * @param fourth (Integer) 
	 */
	abstract public void setFourth(final Integer fourth);

	/**
	 * @return first (String) 
	 */
	abstract public String getFirst();

	/**
	 * @return secondo (Boolean) 
	 */
	public abstract Boolean isSecondo();

	/**
	 * @return third (DateTime) 
	 */
	abstract public DateTime getThird();

	/**
	 * @return fourth (Integer) 
	 */
	abstract public Integer getFourth();

	/**
	 * @return fifth (Float) 
	 */
	abstract public Float getFifth();

	/**
	 * Activate/deactivate validation for this business class.
	 * When set to active the validation will immediately be executed.
	 * 
	 * @param value (boolean) 
	 */
	public void activateValidation(boolean value) {

		this.validation.setActive(value);
		if (value) {
			validation.validate();
		}
	}

}
