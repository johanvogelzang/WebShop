class CompanyStandards implements Plugin<Project>{

	void apply(Project project){

		def reportsDir = new File("build/reports")
		def compileDepsPng = project.file("$reportsDir/compileDeps.png")

		project.task("dependenciesPng") {
			inputs.files project.subprojects.configurations.compile
			outputs.files compileDepsPng
			doFirst {
				if(compileDepsPng.exists()) compileDepsPng.delete()
				if(!reportsDir.exists()) reportsDir.mkdirs()
			}
			doLast {
				def dotGraph = "digraph Compile{"
				project.subprojects.each {subproject ->
					subproject.configurations.compile.dependencies.each {dependency ->
						//if(dependency instanceof ProjectDependency) {
						dotGraph += "\"$subproject.name\" -> \"$dependency.name\""
						//}
					}
				}
				dotGraph += "}"
				def chartParams = [cht: 'gv', chof: 'png', chl: dotGraph]
				def url = "http://chart.googleapis.com/chart?"
				url += chartParams.collect {k,v -> "$k=${URLEncoder.encode(v, 'UTF-8')}"}.join('&')
				compileDepsPng.withOutputStream{out ->
					out << new URL(url).openStream()
				}
			}
		}
	}
}