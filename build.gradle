allprojects  {
	apply plugin: 'maven'
	apply plugin: 'eclipse'
}

subprojects {
	apply plugin: 'java'
	sourceCompatibility = 1.7
	targetCompatibility = 1.7

	repositories { mavenRepo url: "http://repo.maven.apache.org/maven2" }

	sourceSets {
		main { java { srcDirs "generated-sources"
			} }
	}
	
	uploadArchives {
		repositories {
			mavenDeployer {
				def userHome = System.getProperty('user.home')
				repository(url: "file:$userHome/tmp/releases") {
				}
				snapshotRepository(url: "file:$userHome/tmp/snapshots") {
				}
			}
		}
	}
}

buildscript {
	repositories { mavenCentral() }
	dependencies { classpath 'com.github.townsfolk:gradle-release:1.2' }
}

apply plugin: 'release'
createReleaseTag.dependsOn uploadArchives


// Gradle's alternative for Maven's <dependencyManagement>
ext.libraries = [
	junit: "junit:junit:4.4",
	jodatime: "joda-time:joda-time:1.5.2"
]

ext.reportsDir = new File("build/reports")
ext.compileDepsPng = file("$reportsDir/compileDeps.png")

task dependenciesPng() {
	inputs.files subprojects.configurations.compile
	outputs.files compileDepsPng
	doFirst {
		if(compileDepsPng.exists()) compileDepsPng.delete()
		if(!reportsDir.exists()) reportsDir.mkdirs()

	}
	doLast {
		def dotGraph = "digraph Compile{"
		subprojects.each {subproject ->
			subproject.configurations.compile.dependencies.each {dependency ->
				//if(dependency instanceof ProjectDependency) {
				dotGraph += "\"$subproject.name\" -> \"$dependency.name\";"
				dotGraph += "\"$subproject.name\" [color=purple];"
				//}
			}
		}
		dotGraph += "}"
		def chartParams = [cht: 'gv', chof: 'png', chl: dotGraph]
		def url = "http://chart.googleapis.com/chart?"
		url += chartParams.collect {k,v -> "$k=${URLEncoder.encode(v, 'UTF-8')}"}.join('&')
		compileDepsPng.withOutputStream{out ->
			out << new URL(url).openStream()
		}
	}
}