
/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:15 CEST 2011
 *     Application model: TestSVC
 *     Generator        : Mod4j ServiceDsl generator: BusinessServiceBase.xpt
 */

package org.company.recordshop.business;

import java.util.List;

import org.company.recordshop.domain.Derived;

/**
 * @author Generated by Mod4j
 */
public interface TestSVCDomainServiceBase {

	/**
	 * Create a new Derived.
	 * 
	 * @param object
	 *            the Derived to create.
	 * @return the id of the object created.
	 */
	public Long createDerived(Derived object);

	/**
	 * Read an existing Derived.
	 * 
	 * @param id
	 *            the id of the Derived to read.
	 * @return Derived
	 */
	public Derived readDerived(Long id);

	/**
	 * Update an existing Derived.
	 * 
	 * @param object
	 *            the representation of the modified Derived.
	 */
	public void updateDerived(Derived object);

	/**
	 * Delete an Derived
	 * 
	 * @param object
	 *            the Derived object to delete.
	 */
	public void deleteDerived(Derived object);

	/**
	 * Read all existing Derived.
	 *  
	 * @return List<Derived>
	 */
	public List<Derived> listAllDeriveds();

	/**
	 * Reads a range (page) of existing Deriveds.
	 *  
	 * 
	 * @param firstResult - the index of the first result object to be retrieved (numbered from 0)
	 * @param maxResuls - the maximum number of result objects to retrieve (or <=0 for no limit) 
	 * 
	 * @return List containing 0 or more existing Derived objects.
	 *
	 * @see {@link #listDeriveds(int, int, String, boolean)} 
	 */
	public List<Derived> listDeriveds(final int firstResult,
			final int maxResults);

	/**
	 * Reads a sorted range (page) of existing Deriveds.
	 *  
	 * 
	 * @param firstResult - the index of the first result object to be retrieved (numbered from 0)
	 * @param maxResuls - the maximum number of result objects to retrieve (or <=0 for no limit) 
	 * @param sortProperty - the property of the object to sort on
	 * @param isAscending - should the retruned list be sorted ascending or descending? 
	 * 
	 * @return List containing 0 or more existing Derived objects.
	 *
	 * @see {@link #listDeriveds(int, int, String, boolean)}
	 */
	public List<Derived> listDeriveds(final int firstResult,
			final int maxResults, final String sortProperty,
			final boolean isAscending);

	/**
	 * Counts all existing Deriveds objects.
	 *  
	 *
	 * @return number of existing Deriveds objects.
	 */
	public long countDeriveds();

}
