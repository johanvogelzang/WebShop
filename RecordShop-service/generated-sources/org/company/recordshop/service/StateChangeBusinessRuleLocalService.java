/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:14 CEST 2011
 *     Application model: StateChangeBusinessRule
 *     Generator        : Mod4j ServiceDsl generator: LocalService.xpt
 */

package org.company.recordshop.service;

import java.util.List;

import org.company.recordshop.service.dto.OrganisatieDto;
import org.company.recordshop.service.dto.KaderDto;
import org.company.recordshop.service.dto.CasusOverlegDto;

/**
 * @author Generated by Mod4j
 */
public interface StateChangeBusinessRuleLocalService {

	/**
	 * Creates a new OrganisatieDto.
	 * 
	 * @param object 
	 *            The OrganisatieDto to create.
	 * @return the id of the OrganisatieDto created.
	 */
	public Long createOrganisatie(OrganisatieDto object);

	/**
	 * Creates a new CasusOverlegDto.
	 * 
	 * @param object 
	 *            The CasusOverlegDto to create.
	 * @return the id of the CasusOverlegDto created.
	 */
	public Long createCasusOverleg(CasusOverlegDto object);

	/**
	 * Creates a new KaderDto.
	 * 
	 * @param object 
	 *            The KaderDto to create.
	 * @return the id of the KaderDto created.
	 */
	public Long createKader(KaderDto object);

	/**
	 * Reads an existing OrganisatieDto.
	 * 
	 * @param id
	 *            The id of the OrganisatieDto to read.
	 * @return The OrganisatieDto with id, or null if no object with id exists.
	 */
	public OrganisatieDto readOrganisatieAsOrganisatieDto(Long id);

	/**
	 * Reads an existing CasusOverlegDto.
	 * 
	 * @param id
	 *            The id of the CasusOverlegDto to read.
	 * @return The CasusOverlegDto with id, or null if no object with id exists.
	 */
	public CasusOverlegDto readCasusOverlegAsCasusOverlegDto(Long id);

	/**
	 * Reads an existing KaderDto.
	 * 
	 * @param id
	 *            The id of the KaderDto to read.
	 * @return The KaderDto with id, or null if no object with id exists.
	 */
	public KaderDto readKaderAsKaderDto(Long id);

	/**
	 * Updates an existing OrganisatieDto.
	 * 
	 * @param object
	 *            The OrganisatieDto containing the modifications for the corresponding OrganisatieDto
	 */
	public void updateOrganisatie(OrganisatieDto object);

	/**
	 * Updates an existing CasusOverlegDto.
	 * 
	 * @param object
	 *            The CasusOverlegDto containing the modifications for the corresponding CasusOverlegDto
	 */
	public void updateCasusOverleg(CasusOverlegDto object);

	/**
	 * Updates an existing KaderDto.
	 * 
	 * @param object
	 *            The KaderDto containing the modifications for the corresponding KaderDto
	 */
	public void updateKader(KaderDto object);

	/**
	 * Deletes an existing OrganisatieDto.
	 * 
	 * @param object
	 *            The OrganisatieDto object to delete.
	 */
	public void deleteOrganisatie(OrganisatieDto object);

	/**
	 * Deletes an existing CasusOverlegDto.
	 * 
	 * @param object
	 *            The CasusOverlegDto object to delete.
	 */
	public void deleteCasusOverleg(CasusOverlegDto object);

	/**
	 * Deletes an existing KaderDto.
	 * 
	 * @param object
	 *            The KaderDto object to delete.
	 */
	public void deleteKader(KaderDto object);

}
