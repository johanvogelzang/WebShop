
/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:13 CEST 2011
 *     Application model: KaderDto
 *     Generator        : Mod4j DataContractDsl generator: dtoBean.xpt
 */

package org.company.recordshop.service.dto;

import java.util.HashSet;
import java.util.Set;

import org.mod4j.runtime.dto.AbstractDto;

/**
 * 
 *
 * @author generated by Mod4j
 */
public class KaderDto extends AbstractDto {

	/**
	 *  naam: 
	 */

	private String naam;

	/**
	 *  organisaties: 
	 */

	private Set<OrganisatieDto> organisaties = new HashSet<OrganisatieDto>();

	/**
	 * Default no-argument constructor.
	 */
	public KaderDto() {
		super();
	}

	/**
	 * Constructor for use by the DTO Translator.
	 * 
	 * @param id
	 *            The ID of the referenced business object.
	 * @param version
	 *            The version of the referenced business object.
	 */
	public KaderDto(final Long id, final Integer version) {
		super(id, version);
	}

	/**
	 * @param naam (String) 
	 */
	public void setNaam(final String naam) {
		this.naam = naam;
	}

	/**
	 *
	 * @return naam (String) 
	 */
	public String getNaam() {
		return this.naam;
	}

	/**
	 * @param id
	 *        id of the collection element to return
	 *
	 * @return organisatieDto (OrganisatieDto)
	 *         with the given id.
	 */
	public OrganisatieDto getFromOrganisaties(Long id) {
		if (id == null) {
			return null;
		}
		for (OrganisatieDto organisatieDto : this.organisaties) {
			if (id.equals(organisatieDto.getId())) {
				return organisatieDto;
			}
		}
		return null;
	}
	/**
	 * @return organisaties (Set<OrganisatieDto>) 
	 */
	public Set<OrganisatieDto> getOrganisaties() {
		return this.organisaties;
	}

	/**
	 * Adds a single element to the organisaties collection
	 *
	 * @param element The element to add.
	 */
	public void addToOrganisaties(OrganisatieDto element) {

		if (element == null || this.organisaties.contains(element)) {
			return;
		}
		this.organisaties.add(element);
	}

	/**
	 * Removes a single element from the organisaties collection.
	 * 
	 * @param element The element to be removed.
	 */
	public void removeFromOrganisaties(OrganisatieDto element) {

		if (element == null) {
			return;
		}
		this.organisaties.remove(element);
	}

	/**
	 * Sets all attributes that have a default value, to their default values.
	 *
	 * @author Generated by Mod4j
	 */
	public void clear() {
		naam = null;

	}

	/**
	 * toString method for KaderDto
	 */
	@Override
	public String toString() {
		StringBuffer result = new StringBuffer();
		result.append("org.company.recordshop.service.dto.KaderDto[");
		result.append("id=");
		result.append(getId());
		result.append(",");
		result.append("version=");
		result.append(getVersion());

		result.append(",");
		result.append("naam=");
		result.append(naam);

		result.append("]");
		return result.toString();
	}

}
