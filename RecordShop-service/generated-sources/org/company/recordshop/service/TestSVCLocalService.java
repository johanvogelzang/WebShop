/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:15 CEST 2011
 *     Application model: TestSVC
 *     Generator        : Mod4j ServiceDsl generator: LocalService.xpt
 */

package org.company.recordshop.service;

import java.util.List;

import org.company.recordshop.service.dto.DerivedDto;

/**
 * @author Generated by Mod4j
 */
public interface TestSVCLocalService {

	/**
	 * Returns a list of all objects of type DerivedDto.
	 * 
	 *
	 * @return the list of all DerivedDto objects.
	 */
	public List<DerivedDto> listAllDerived();

	/**
	 * Reads a range (page) of objects of type DerivedDto.
	 * 
	 * @param firstResult - the index of the first result object to be retrieved (numbered from 0)
	 * @param maxResults - the maximum number of result objects to retrieve (or <=0 for no limit) 
	 * 
	 * @return List containing 0 or more DerivedDto objects.
	 *
	 * @see {@link #listAllDerived(int, int, String, boolean)}
	 */
	public List<DerivedDto> listAllDerived(final int firstResult,
			final int maxResults);

	/**
	 * Reads an sorted range (page) of objects of type DerivedDto.
	 * 
	 * @param firstResult - the index of the first result object to be retrieved (numbered from 0)
	 * @param maxResults - the maximum number of result objects to retrieve (or <=0 for no limit) 
	 * @param sortProperty - the property of the object to sort on
	 * @param isAscending - should the retruned list be sorted ascending or descending? 
	 *
	 * @return ordered List containing 0 or more DerivedDto objects.
	 *
	 * @see {@link #listAllDerived(int, int)} 
	 */
	public List<DerivedDto> listAllDerived(final int firstResult,
			final int maxResults, final String sortProperty,
			final boolean isAscending);

	/**
	 * Creates a new DerivedDto.
	 * 
	 * @param object 
	 *            The DerivedDto to create.
	 * @return the id of the DerivedDto created.
	 */
	public Long createDerived(DerivedDto object);

	/**
	 * Reads an existing DerivedDto.
	 * 
	 * @param id
	 *            The id of the DerivedDto to read.
	 * @return The DerivedDto with id, or null if no object with id exists.
	 */
	public DerivedDto readDerivedAsDerivedDto(Long id);

	/**
	 * Updates an existing DerivedDto.
	 * 
	 * @param object
	 *            The DerivedDto containing the modifications for the corresponding DerivedDto
	 */
	public void updateDerived(DerivedDto object);

	/**
	 * Deletes an existing DerivedDto.
	 * 
	 * @param object
	 *            The DerivedDto object to delete.
	 */
	public void deleteDerived(DerivedDto object);

	/**
	 * Counts the number of existing objects of type Derived.
	 * 
	 * @return number of existing Derived objects. 
	 */
	public long countDeriveds();

}
