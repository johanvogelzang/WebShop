
/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:14 CEST 2011
 *     Application model: OrderServiceModel
 *     Generator        : Mod4j ServiceDsl generator: LocalServiceImplBase.xpt
 */

package org.company.recordshop.service;

import java.util.List;
import java.util.ArrayList;
import org.springframework.util.Assert;

import org.company.recordshop.business.OrderServiceModelDomainService;

import org.company.recordshop.service.dto.OrderDto;
import org.company.recordshop.service.dto.SimpleCustomerDto;
import org.company.recordshop.service.dto.DateDto;
import org.company.recordshop.service.dto.OrderNumberAndDateDto;
import org.company.recordshop.service.dto.OrderWithOrderLinesDto;
import org.company.recordshop.service.dto.OrderLineDto;

import org.company.recordshop.service.dto.translators.OrderDtoTranslator;
import org.company.recordshop.domain.Order;
import org.company.recordshop.domain.OrderExample;
import org.company.recordshop.service.dto.translators.SimpleCustomerDtoTranslator;
import org.company.recordshop.domain.Customer;
import org.company.recordshop.domain.CustomerExample;
import org.company.recordshop.service.dto.translators.OrderNumberAndDateDtoTranslator;
import org.company.recordshop.domain.Order;
import org.company.recordshop.domain.OrderExample;
import org.company.recordshop.service.dto.translators.OrderWithOrderLinesDtoTranslator;
import org.company.recordshop.domain.Order;
import org.company.recordshop.domain.OrderExample;
import org.company.recordshop.service.dto.translators.OrderLineDtoTranslator;
import org.company.recordshop.domain.OrderLine;
import org.company.recordshop.domain.OrderLineExample;

/**
 * @author Generated by Mod4j
 */
abstract public class OrderServiceModelLocalServiceImplBase
		implements
			OrderServiceModelLocalService {

	protected OrderServiceModelDomainService orderServiceModelDomainService;

	/**
	 * @param object
	 *            The orderServiceModelDomainService to set.
	 */
	public void setOrderServiceModelDomainService(
			OrderServiceModelDomainService object) {
		this.orderServiceModelDomainService = object;
	}

	/** 
	 * @return The orderServiceModelDomainService to get.
	 *
	 */
	public OrderServiceModelDomainService getOrderServiceModelDomainService() {
		return this.orderServiceModelDomainService;
	}

	protected OrderDtoTranslator orderDtoTranslator;

	/**
	 * @param object
	 *            The orderDtoTranslator to set.
	 */
	public void setOrderDtoTranslator(OrderDtoTranslator object) {
		this.orderDtoTranslator = object;
	}

	/** 
	 * @return The orderDtoTranslator to get.
	 *
	 */
	public OrderDtoTranslator getOrderDtoTranslator() {
		return this.orderDtoTranslator;
	}

	protected SimpleCustomerDtoTranslator simpleCustomerDtoTranslator;

	/**
	 * @param object
	 *            The simpleCustomerDtoTranslator to set.
	 */
	public void setSimpleCustomerDtoTranslator(
			SimpleCustomerDtoTranslator object) {
		this.simpleCustomerDtoTranslator = object;
	}

	/** 
	 * @return The simpleCustomerDtoTranslator to get.
	 *
	 */
	public SimpleCustomerDtoTranslator getSimpleCustomerDtoTranslator() {
		return this.simpleCustomerDtoTranslator;
	}

	protected OrderNumberAndDateDtoTranslator orderNumberAndDateDtoTranslator;

	/**
	 * @param object
	 *            The orderNumberAndDateDtoTranslator to set.
	 */
	public void setOrderNumberAndDateDtoTranslator(
			OrderNumberAndDateDtoTranslator object) {
		this.orderNumberAndDateDtoTranslator = object;
	}

	/** 
	 * @return The orderNumberAndDateDtoTranslator to get.
	 *
	 */
	public OrderNumberAndDateDtoTranslator getOrderNumberAndDateDtoTranslator() {
		return this.orderNumberAndDateDtoTranslator;
	}

	protected OrderWithOrderLinesDtoTranslator orderWithOrderLinesDtoTranslator;

	/**
	 * @param object
	 *            The orderWithOrderLinesDtoTranslator to set.
	 */
	public void setOrderWithOrderLinesDtoTranslator(
			OrderWithOrderLinesDtoTranslator object) {
		this.orderWithOrderLinesDtoTranslator = object;
	}

	/** 
	 * @return The orderWithOrderLinesDtoTranslator to get.
	 *
	 */
	public OrderWithOrderLinesDtoTranslator getOrderWithOrderLinesDtoTranslator() {
		return this.orderWithOrderLinesDtoTranslator;
	}

	protected OrderLineDtoTranslator orderLineDtoTranslator;

	/**
	 * @param object
	 *            The orderLineDtoTranslator to set.
	 */
	public void setOrderLineDtoTranslator(OrderLineDtoTranslator object) {
		this.orderLineDtoTranslator = object;
	}

	/** 
	 * @return The orderLineDtoTranslator to get.
	 *
	 */
	public OrderLineDtoTranslator getOrderLineDtoTranslator() {
		return this.orderLineDtoTranslator;
	}

	/**
	 * {@inheritDoc}
	 */
	public SimpleCustomerDto readCustomerAAA(Long id) {
		Customer result = orderServiceModelDomainService.readCustomer(id);
		return (result == null) ? null : simpleCustomerDtoTranslator
				.toDto(result);
	}

	/**
	 * {@inheritDoc}
	 */
	public Long createOrder(OrderDto object) {
		Long result = orderServiceModelDomainService
				.createOrder(orderDtoTranslator.fromDto(object));
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	public Long createOrder(OrderNumberAndDateDto object) {
		Long result = orderServiceModelDomainService
				.createOrder(orderNumberAndDateDtoTranslator.fromDto(object));
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	public Long createOrder(OrderWithOrderLinesDto object) {
		Long result = orderServiceModelDomainService
				.createOrder(orderWithOrderLinesDtoTranslator.fromDto(object));
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	public OrderDto readOrderAsOrderDto(Long id) {
		Order result = orderServiceModelDomainService.readOrder(id);
		return (result == null) ? null : orderDtoTranslator.toDto(result);
	}

	/**
	 * {@inheritDoc}
	 */
	public OrderNumberAndDateDto readOrderAsOrderNumberAndDateDto(Long id) {
		Order result = orderServiceModelDomainService.readOrder(id);
		return (result == null) ? null : orderNumberAndDateDtoTranslator
				.toDto(result);
	}

	/**
	 * {@inheritDoc}
	 */
	public OrderWithOrderLinesDto readOrderAsOrderWithOrderLinesDto(Long id) {
		Order result = orderServiceModelDomainService.readOrder(id);
		return (result == null) ? null : orderWithOrderLinesDtoTranslator
				.toDto(result);
	}

	/**
	 * {@inheritDoc}
	 */
	public void updateOrder(OrderDto object) {
		Order domainObject = orderServiceModelDomainService.readOrder(object
				.getId());
		orderDtoTranslator.fromDto(object, domainObject);
		orderServiceModelDomainService.updateOrder(domainObject);
	}

	/**
	 * {@inheritDoc}
	 */
	public void updateOrder(OrderNumberAndDateDto object) {
		Order domainObject = orderServiceModelDomainService.readOrder(object
				.getId());
		orderNumberAndDateDtoTranslator.fromDto(object, domainObject);
		orderServiceModelDomainService.updateOrder(domainObject);
	}

	/**
	 * {@inheritDoc}
	 */
	public void updateOrder(OrderWithOrderLinesDto object) {
		Order domainObject = orderServiceModelDomainService.readOrder(object
				.getId());
		orderWithOrderLinesDtoTranslator.fromDto(object, domainObject);
		orderServiceModelDomainService.updateOrder(domainObject);
	}

	/**
	 * {@inheritDoc}
	 */
	public void deleteOrder(OrderDto object) {
		Assert.notNull(object, "argument [object] may not be null");
		Order existing = orderServiceModelDomainService.readOrder(object
				.getId());
		orderServiceModelDomainService.deleteOrder(existing);
	}

	/**
	 * {@inheritDoc}
	 */
	public void deleteOrder(OrderNumberAndDateDto object) {
		Assert.notNull(object, "argument [object] may not be null");
		Order existing = orderServiceModelDomainService.readOrder(object
				.getId());
		orderServiceModelDomainService.deleteOrder(existing);
	}

	/**
	 * {@inheritDoc}
	 */
	public void deleteOrder(OrderWithOrderLinesDto object) {
		Assert.notNull(object, "argument [object] may not be null");
		Order existing = orderServiceModelDomainService.readOrder(object
				.getId());
		orderServiceModelDomainService.deleteOrder(existing);
	}

	// Association related service methods

}
