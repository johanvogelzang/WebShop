
/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:08 CEST 2011
 *     Application model: Address
 *     Generator        : Mod4j BusinessDomainDsl generator: NewJavaBean.xpt
 */

package org.company.recordshop.domain;

import org.mod4j.runtime.validation.BusinessRuleValidationSupport;
import org.mod4j.runtime.validation.NotNullValidator;
import org.mod4j.runtime.validation.RegExpValidator;

/**
 * 
 *
 * @author Generated by Mod4j BusinessDomain DSL
 */
@SuppressWarnings("serial")
public abstract class AddressImplBase implements java.io.Serializable {

	/**
	 * validation : Responsible for validating attribute constraints and businessrules for this business class.
	 * 
	 */
	protected BusinessRuleValidationSupport validation = new BusinessRuleValidationSupport(
			this);

	/**
	 *  id: The identifier of this object.
	 */
	private Long id;

	/**
	 *
	 * @return id (Long) The identifier of this object.
	 */
	public Long getId() {
		return this.id;
	}

	/**
	 * version: The version of this object 
	 */
	private int version = -1;

	/**
	 * @return version (Integer) The version of this object.
	 */
	public Integer getVersion() {
		return this.version;
	}

	/**
	 * toString method for AddressImplBase
	 */
	@Override
	public String toString() {
		StringBuffer result = new StringBuffer();
		result.append("org.company.recordshop.domain.Address[");
		result.append("id=");
		result.append(getId());
		result.append(",");
		result.append("version=");
		result.append(getVersion());

		result.append(",");
		result.append("streetName=");
		result.append(streetName);

		result.append(",");
		result.append("houseNumber=");
		result.append(houseNumber);

		result.append(",");
		result.append("zipcode=");
		result.append(zipcode);

		result.append(",");
		result.append("city=");
		result.append(city);

		result.append("]");
		return result.toString();
	}

	/**
	 *  streetName: 
	 */
	protected String streetName;

	/**
	 *  houseNumber: 
	 */
	protected String houseNumber;

	/**
	 *  zipcode: 
	 */
	protected String zipcode;

	public static final String ZIPCODE_REGEXP = "\\d{5}(-\\d{4})?";

	/**
	 *  city: 
	 */
	protected String city;

	private void addValidators() {

		validation.addValidator(new NotNullValidator(Address.class,
				"streetName"));

		validation.addValidator(new NotNullValidator(Address.class,
				"houseNumber"));

		validation.addValidator(new NotNullValidator(Address.class, "zipcode"));
		validation.addValidator(new RegExpValidator(Address.class, "zipcode",
				ZIPCODE_REGEXP));

		validation.addValidator(new NotNullValidator(Address.class, "city"));

	}

	/**
	 * Default no-argument constructor for AddressImplBase 
	 */
	protected AddressImplBase() {

		addValidators();
	}

	/**
	 * Minimal constructor for AddressImplBase
	 *
	 * @param streetName (String) 
	 * @param houseNumber (String) 
	 * @param zipcode (String) 
	 * @param city (String) 
	 */
	public AddressImplBase(String streetName, String houseNumber,
			String zipcode, String city) {

		this.streetName = streetName;
		this.houseNumber = houseNumber;
		this.zipcode = zipcode;
		this.city = city;
		addValidators();
		validation.validate();
	}

	/**
	 * @return streetName (String) 
	 */
	public String getStreetName() {
		return this.streetName;
	}

	/**
	 * @return houseNumber (String) 
	 */
	public String getHouseNumber() {
		return this.houseNumber;
	}

	/**
	 * @return zipcode (String) 
	 */
	public String getZipcode() {
		return this.zipcode;
	}

	/**
	 * @return city (String) 
	 */
	public String getCity() {
		return this.city;
	}

	/**
	 * @param streetName (String) 
	 */
	public void setStreetName(final String streetName) {
		this.streetName = streetName;
		validation.validate();
	}

	/**
	 * @param houseNumber (String) 
	 */
	public void setHouseNumber(final String houseNumber) {
		this.houseNumber = houseNumber;
		validation.validate();
	}

	/**
	 * @param zipcode (String) 
	 */
	public void setZipcode(final String zipcode) {
		this.zipcode = zipcode;
		validation.validate();
	}

	/**
	 * @param city (String) 
	 */
	public void setCity(final String city) {
		this.city = city;
		validation.validate();
	}

	/**
	 * Activate/deactivate validation for this business class.
	 * When set to active the validation will immediately be executed.
	 * 
	 * @param value (boolean) 
	 */
	public void activateValidation(boolean value) {

		this.validation.setActive(value);
		if (value) {
			validation.validate();
		}
	}

}
