<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 

    Generated by Mod4j. 
        Time             : Fri Jun 10 13:47:15 CEST 2011
        Application model: TestSVC
        Generator        : Mod4j ServiceDsl generator: BusinessLayerContext.xpt
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

    <!--  AOP configuration for cross cutting concern Logging -->
    
    <aop:config>
        <aop:pointcut expression="execution(* org.company.webshop.business.CustomerServiceModelDomainServiceImpl.*(..))" id="CustomerServiceModelBusinessMethods"/>
        <aop:aspect ref="loggingAspect">
            <aop:before method="logBefore" pointcut-ref="CustomerServiceModelBusinessMethods"/>
            <aop:after method="logAfter" pointcut-ref="CustomerServiceModelBusinessMethods"/>
        </aop:aspect>
        <aop:aspect ref="timingAspect">
            <aop:around method="time" pointcut-ref="CustomerServiceModelBusinessMethods"/>
        </aop:aspect>
    </aop:config>
    
    <aop:config>
        <aop:pointcut expression="execution(* org.company.webshop.business.OrderServiceModelDomainServiceImpl.*(..))" id="OrderServiceModelBusinessMethods"/>
        <aop:aspect ref="loggingAspect">
            <aop:before method="logBefore" pointcut-ref="OrderServiceModelBusinessMethods"/>
            <aop:after method="logAfter" pointcut-ref="OrderServiceModelBusinessMethods"/>
        </aop:aspect>
        <aop:aspect ref="timingAspect">
            <aop:around method="time" pointcut-ref="OrderServiceModelBusinessMethods"/>
        </aop:aspect>
    </aop:config>
    
    <aop:config>
        <aop:pointcut expression="execution(* org.company.webshop.business.RecordsDomainServiceImpl.*(..))" id="RecordsBusinessMethods"/>
        <aop:aspect ref="loggingAspect">
            <aop:before method="logBefore" pointcut-ref="RecordsBusinessMethods"/>
            <aop:after method="logAfter" pointcut-ref="RecordsBusinessMethods"/>
        </aop:aspect>
        <aop:aspect ref="timingAspect">
            <aop:around method="time" pointcut-ref="RecordsBusinessMethods"/>
        </aop:aspect>
    </aop:config>
    
    <aop:config>
        <aop:pointcut expression="execution(* org.company.webshop.business.StateChangeBusinessRuleDomainServiceImpl.*(..))" id="StateChangeBusinessRuleBusinessMethods"/>
        <aop:aspect ref="loggingAspect">
            <aop:before method="logBefore" pointcut-ref="StateChangeBusinessRuleBusinessMethods"/>
            <aop:after method="logAfter" pointcut-ref="StateChangeBusinessRuleBusinessMethods"/>
        </aop:aspect>
        <aop:aspect ref="timingAspect">
            <aop:around method="time" pointcut-ref="StateChangeBusinessRuleBusinessMethods"/>
        </aop:aspect>
    </aop:config>
    
    <aop:config>
        <aop:pointcut expression="execution(* org.company.webshop.business.TestSVCDomainServiceImpl.*(..))" id="TestSVCBusinessMethods"/>
        <aop:aspect ref="loggingAspect">
            <aop:before method="logBefore" pointcut-ref="TestSVCBusinessMethods"/>
            <aop:after method="logAfter" pointcut-ref="TestSVCBusinessMethods"/>
        </aop:aspect>
        <aop:aspect ref="timingAspect">
            <aop:around method="time" pointcut-ref="TestSVCBusinessMethods"/>
        </aop:aspect>
    </aop:config>
    

    
    <bean class="org.company.webshop.business.CustomerServiceModelDomainServiceImpl" id="customerServiceModelDomainService">
        
        
	        
	        <property name="customerDao" ref="customerDao"/>
	        
	        <property name="orderDao" ref="orderDao"/>
	        
	        <property name="orderLineDao" ref="orderLineDao"/>
	        
	        <property name="productDao" ref="productDao"/>
	        
	        <property name="artistDao" ref="artistDao"/>
	        
	        <property name="personDao" ref="personDao"/>
	        
	        <property name="relationDao" ref="relationDao"/>
	        
	    
        
    </bean>
    
    <bean class="org.company.webshop.business.OrderServiceModelDomainServiceImpl" id="orderServiceModelDomainService">
        
        
	        
	        <property name="orderDao" ref="orderDao"/>
	        
	        <property name="customerDao" ref="customerDao"/>
	        
	        <property name="orderLineDao" ref="orderLineDao"/>
	        
	    
        
    </bean>
    
    <bean class="org.company.webshop.business.RecordsDomainServiceImpl" id="recordsDomainService">
        
        
	        
	        <property name="recordDao" ref="recordDao"/>
	        
	    
        
    </bean>
    
    <bean class="org.company.webshop.business.StateChangeBusinessRuleDomainServiceImpl" id="stateChangeBusinessRuleDomainService">
        
        
	        
	        <property name="organisatieDao" ref="organisatieDao"/>
	        
	        <property name="kaderDao" ref="kaderDao"/>
	        
	        <property name="casusOverlegDao" ref="casusOverlegDao"/>
	        
	    
        
    </bean>
    
    <bean class="org.company.webshop.business.TestSVCDomainServiceImpl" id="testSVCDomainService">
        
        
	        
	        <property name="derivedDao" ref="derivedDao"/>
	        
	    
        
    </bean>
    

</beans>
