
/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:14 CEST 2011
 *     Application model: StateChangeBusinessRule
 *     Generator        : Mod4j ServiceDsl generator: BusinessServiceBase.xpt
 */

package org.company.webshop.business;

import org.company.webshop.domain.CasusOverleg;
import org.company.webshop.domain.Kader;
import org.company.webshop.domain.Organisatie;

/**
 * @author Generated by Mod4j
 */
public interface StateChangeBusinessRuleDomainServiceBase {

	/**
	 * Create a new Organisatie.
	 * 
	 * @param object
	 *            the Organisatie to create.
	 * @return the id of the object created.
	 */
	public Long createOrganisatie(Organisatie object);

	/**
	 * Create a new CasusOverleg.
	 * 
	 * @param object
	 *            the CasusOverleg to create.
	 * @return the id of the object created.
	 */
	public Long createCasusOverleg(CasusOverleg object);

	/**
	 * Create a new Kader.
	 * 
	 * @param object
	 *            the Kader to create.
	 * @return the id of the object created.
	 */
	public Long createKader(Kader object);

	/**
	 * Read an existing Organisatie.
	 * 
	 * @param id
	 *            the id of the Organisatie to read.
	 * @return Organisatie
	 */
	public Organisatie readOrganisatie(Long id);

	/**
	 * Read an existing CasusOverleg.
	 * 
	 * @param id
	 *            the id of the CasusOverleg to read.
	 * @return CasusOverleg
	 */
	public CasusOverleg readCasusOverleg(Long id);

	/**
	 * Read an existing Kader.
	 * 
	 * @param id
	 *            the id of the Kader to read.
	 * @return Kader
	 */
	public Kader readKader(Long id);

	/**
	 * Update an existing Organisatie.
	 * 
	 * @param object
	 *            the representation of the modified Organisatie.
	 */
	public void updateOrganisatie(Organisatie object);

	/**
	 * Update an existing CasusOverleg.
	 * 
	 * @param object
	 *            the representation of the modified CasusOverleg.
	 */
	public void updateCasusOverleg(CasusOverleg object);

	/**
	 * Update an existing Kader.
	 * 
	 * @param object
	 *            the representation of the modified Kader.
	 */
	public void updateKader(Kader object);

	/**
	 * Delete an Organisatie
	 * 
	 * @param object
	 *            the Organisatie object to delete.
	 */
	public void deleteOrganisatie(Organisatie object);

	/**
	 * Delete an CasusOverleg
	 * 
	 * @param object
	 *            the CasusOverleg object to delete.
	 */
	public void deleteCasusOverleg(CasusOverleg object);

	/**
	 * Delete an Kader
	 * 
	 * @param object
	 *            the Kader object to delete.
	 */
	public void deleteKader(Kader object);

}
