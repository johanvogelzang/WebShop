/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:10 CEST 2011
 *     Application model: SubclassEmpty2
 *     Generator        : Mod4j BusinessDomainDsl generator: DaoInterfaceBase.xpt
 */

package org.company.recordshop.data;

import java.util.List;

import org.company.recordshop.domain.SubclassEmpty2;
import org.company.recordshop.domain.SubclassEmpty2Example;

/**
 * SubclassEmpty2DaoBaseData Access Object (DAO). Responsible for accessing database.
 * 
 * @author Mod4j generated
 * 
 */
public interface SubclassEmpty2DaoBase {

	/**
	 * Retrieves a SubclassEmpty2 by its ID from the database.
	 * 
	 * @param id id of the SubclassEmpty2 to retrieve.
	 * @return SubclassEmpty2 retrieved or null when no SubclassEmpty2 was found.
	 */
	SubclassEmpty2 retrieve(Long id);

	/**
	 * Adds a new SubclassEmpty2 to the database
	 * 
	 * @param object
	 *                the SubclassEmpty2 to add to the database.
	 * @return the stored SubclassEmpty2.
	 */
	Long add(SubclassEmpty2 object);

	/**
	 * Deletes a SubclassEmpty2 from the database.
	 * 
	 * @param object
	 *                the SubclassEmpty2 to delete
	 */
	void delete(SubclassEmpty2 object);

	/**
	 * Selects all SubclassEmpty2s from the database.
	 * 
	 * @return a List of all SubclassEmpty2 objects.
	 */
	List<SubclassEmpty2> listAll();

	/**
	 * Selects a range (page) of SubclassEmpty2s from the database.
	 * 
	 * @param firstResult the index of the first result object to be retrieved (numbered from 0)
	 * @param maxResults  the maximum number of result objects to retrieve (or <=0 for no limit) 
	 * 
	 * @return a List containing 0 or more SubclassEmpty2 objects.
	 *
	 * @see #listPage(int, int)
	 */
	List<SubclassEmpty2> listPage(final int firstResult, final int maxResults);

	/**
	 * Selects a sorted range (page) of SubclassEmpty2s from the database.
	 * 
	 * @param firstResult the index of the first result object to be retrieved (numbered from 0)
	 * @param maxResults the maximum number of result objects to retrieve (or <=0 for no limit)
	 * @param sortProperty the property of the object to sort on
	 * @param isAscending should the retruned list be sorted ascending? 
	 * 
	 * @return a sorted List containing 0 or more SubclassEmpty2 objects.
	 *
	 * @see #listPage(int, int, String, boolean)
	 */
	List<SubclassEmpty2> listPage(final int firstResult, final int maxResults,
			final String sortProperty, final boolean isAscending);

	/**
	 * Selects a sorted range (page) of SubclassEmpty2s from the database.
	 * 
	 * @param example the example object to which the result objects need to conform
	 * @param firstResult the index of the first result object to be retrieved (numbered from 0)
	 * @param maxResults the maximum number of result objects to retrieve (or <=0 for no limit)
	 * @param sortProperty the property of the object to sort on
	 * @param isAscending should the retruned list be sorted ascending? 
	 * 
	 * @return a sorted List containing 0 or more SubclassEmpty2 objects.
	 *
	 * @see #listPage(int, int, String, boolean)
	 */
	List<SubclassEmpty2> listPageByExample(final SubclassEmpty2Example example,
			final int firstResult, final int maxResults,
			final String sortProperty, final boolean isAscending);

	/**
	 * Counts the number of persisted SubclassEmpty2 objects in the database.
	 * 
	 * @return the number of persisted objects in the database.
	 */
	long count();

	/**
	 * Counts the number of persisted SubclassEmpty2 objects in the database that
	 * matches the given example object.
	 *
	 * @param example
	 *                the example object to be counted
	 * 
	 * @return the number of persisted objects in the database.
	 */
	long count(final SubclassEmpty2Example example);

	/**
	 * Selects SubclassEmpty2s from the database that matches an
	 * example object using Query-by-Example(QBE).
	 * 
	 * @param example
	 *                the example object to which the result objects need to conform
	 * @return a List of SubclassEmpty2 objects.
	 */
	List<SubclassEmpty2> findByExample(SubclassEmpty2Example example);
}
