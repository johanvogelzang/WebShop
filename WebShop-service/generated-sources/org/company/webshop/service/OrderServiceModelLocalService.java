/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:14 CEST 2011
 *     Application model: OrderServiceModel
 *     Generator        : Mod4j ServiceDsl generator: LocalService.xpt
 */

package org.company.webshop.service;

import java.util.List;

import org.company.webshop.service.dto.DateDto;
import org.company.webshop.service.dto.OrderDto;
import org.company.webshop.service.dto.OrderNumberAndDateDto;
import org.company.webshop.service.dto.OrderWithOrderLinesDto;
import org.company.webshop.service.dto.SimpleCustomerDto;

/**
 * @author Generated by Mod4j
 */
public interface OrderServiceModelLocalService {

	/** 
	 * Description: Find all Orders for a specific Customer.
	 * @param customer A custom parameter
	 * @return List<OrderNumberAndDateDto> 
	 */
	public List<OrderNumberAndDateDto> findOrdersByCustomer(
			SimpleCustomerDto customer);

	/** 
	 * Description: Find all orders for a given date.
	 * @param date A custom parameter
	 * @return List<OrderNumberAndDateDto> 
	 */
	public List<OrderNumberAndDateDto> findOrdersByDate(DateDto date);

	/**
	 * Reads an existing SimpleCustomerDto.
	 * 
	 * @param id
	 *            The id of the SimpleCustomerDto to read.
	 * @return The SimpleCustomerDto with id, or null if no object with id exists.
	 */
	public SimpleCustomerDto readCustomerAAA(Long id);

	/**
	 * Creates a new OrderDto.
	 * 
	 * @param object 
	 *            The OrderDto to create.
	 * @return the id of the OrderDto created.
	 */
	public Long createOrder(OrderDto object);

	/**
	 * Creates a new OrderNumberAndDateDto.
	 * 
	 * @param object 
	 *            The OrderNumberAndDateDto to create.
	 * @return the id of the OrderNumberAndDateDto created.
	 */
	public Long createOrder(OrderNumberAndDateDto object);

	/**
	 * Creates a new OrderWithOrderLinesDto.
	 * 
	 * @param object 
	 *            The OrderWithOrderLinesDto to create.
	 * @return the id of the OrderWithOrderLinesDto created.
	 */
	public Long createOrder(OrderWithOrderLinesDto object);

	/**
	 * Reads an existing OrderDto.
	 * 
	 * @param id
	 *            The id of the OrderDto to read.
	 * @return The OrderDto with id, or null if no object with id exists.
	 */
	public OrderDto readOrderAsOrderDto(Long id);

	/**
	 * Reads an existing OrderNumberAndDateDto.
	 * 
	 * @param id
	 *            The id of the OrderNumberAndDateDto to read.
	 * @return The OrderNumberAndDateDto with id, or null if no object with id exists.
	 */
	public OrderNumberAndDateDto readOrderAsOrderNumberAndDateDto(Long id);

	/**
	 * Reads an existing OrderWithOrderLinesDto.
	 * 
	 * @param id
	 *            The id of the OrderWithOrderLinesDto to read.
	 * @return The OrderWithOrderLinesDto with id, or null if no object with id exists.
	 */
	public OrderWithOrderLinesDto readOrderAsOrderWithOrderLinesDto(Long id);

	/**
	 * Updates an existing OrderDto.
	 * 
	 * @param object
	 *            The OrderDto containing the modifications for the corresponding OrderDto
	 */
	public void updateOrder(OrderDto object);

	/**
	 * Updates an existing OrderNumberAndDateDto.
	 * 
	 * @param object
	 *            The OrderNumberAndDateDto containing the modifications for the corresponding OrderNumberAndDateDto
	 */
	public void updateOrder(OrderNumberAndDateDto object);

	/**
	 * Updates an existing OrderWithOrderLinesDto.
	 * 
	 * @param object
	 *            The OrderWithOrderLinesDto containing the modifications for the corresponding OrderWithOrderLinesDto
	 */
	public void updateOrder(OrderWithOrderLinesDto object);

	/**
	 * Deletes an existing OrderDto.
	 * 
	 * @param object
	 *            The OrderDto object to delete.
	 */
	public void deleteOrder(OrderDto object);

	/**
	 * Deletes an existing OrderNumberAndDateDto.
	 * 
	 * @param object
	 *            The OrderNumberAndDateDto object to delete.
	 */
	public void deleteOrder(OrderNumberAndDateDto object);

	/**
	 * Deletes an existing OrderWithOrderLinesDto.
	 * 
	 * @param object
	 *            The OrderWithOrderLinesDto object to delete.
	 */
	public void deleteOrder(OrderWithOrderLinesDto object);

}
