
/**
 * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN! 
 *
 * Generated by Mod4j. 
 *     Time             : Fri Jun 10 13:47:12 CEST 2011
 *     Application model: PersonDto
 *     Generator        : Mod4j DataContractDsl generator: dtoBean.xpt
 */

package org.company.webshop.service.dto;

import java.util.HashSet;
import java.util.Set;

import org.joda.time.DateTime;
import org.mod4j.runtime.dto.AbstractDto;

/**
 * 
 *
 * @author generated by Mod4j
 */
public class PersonDto extends AbstractDto {

	/**
	 *  firstName: 
	 */

	private String firstName;

	/**
	 *  lastName: 
	 */

	private String lastName;

	/**
	 *  birthDate: 
	 */

	private DateTime birthDate;

	/**
	 *  relationsFrom: 
	 */

	private Set<RelationDto> relationsFrom = new HashSet<RelationDto>();

	/**
	 *  relationsTo: 
	 */

	private Set<RelationDto> relationsTo = new HashSet<RelationDto>();

	/**
	 * Default no-argument constructor.
	 */
	public PersonDto() {
		super();
	}

	/**
	 * Constructor for use by the DTO Translator.
	 * 
	 * @param id
	 *            The ID of the referenced business object.
	 * @param version
	 *            The version of the referenced business object.
	 */
	public PersonDto(final Long id, final Integer version) {
		super(id, version);
	}

	/**
	 * @param firstName (String) 
	 */
	public void setFirstName(final String firstName) {
		this.firstName = firstName;
	}

	/**
	 *
	 * @return firstName (String) 
	 */
	public String getFirstName() {
		return this.firstName;
	}

	/**
	 * @param lastName (String) 
	 */
	public void setLastName(final String lastName) {
		this.lastName = lastName;
	}

	/**
	 *
	 * @return lastName (String) 
	 */
	public String getLastName() {
		return this.lastName;
	}

	/**
	 * @param birthDate (DateTime) 
	 */
	public void setBirthDate(final DateTime birthDate) {
		this.birthDate = birthDate;
	}

	/**
	 *
	 * @return birthDate (DateTime) 
	 */
	public DateTime getBirthDate() {
		return this.birthDate;
	}

	/**
	 * @param id
	 *        id of the collection element to return
	 *
	 * @return relationDto (RelationDto)
	 *         with the given id.
	 */
	public RelationDto getFromRelationsFrom(Long id) {
		if (id == null) {
			return null;
		}
		for (RelationDto relationDto : this.relationsFrom) {
			if (id.equals(relationDto.getId())) {
				return relationDto;
			}
		}
		return null;
	}
	/**
	 * @return relationsFrom (Set<RelationDto>) 
	 */
	public Set<RelationDto> getRelationsFrom() {
		return this.relationsFrom;
	}

	/**
	 * Adds a single element to the relationsFrom collection
	 *
	 * @param element The element to add.
	 */
	public void addToRelationsFrom(RelationDto element) {

		if (element == null || this.relationsFrom.contains(element)) {
			return;
		}
		this.relationsFrom.add(element);
	}

	/**
	 * Removes a single element from the relationsFrom collection.
	 * 
	 * @param element The element to be removed.
	 */
	public void removeFromRelationsFrom(RelationDto element) {

		if (element == null) {
			return;
		}
		this.relationsFrom.remove(element);
	}

	/**
	 * @param id
	 *        id of the collection element to return
	 *
	 * @return relationDto (RelationDto)
	 *         with the given id.
	 */
	public RelationDto getFromRelationsTo(Long id) {
		if (id == null) {
			return null;
		}
		for (RelationDto relationDto : this.relationsTo) {
			if (id.equals(relationDto.getId())) {
				return relationDto;
			}
		}
		return null;
	}
	/**
	 * @return relationsTo (Set<RelationDto>) 
	 */
	public Set<RelationDto> getRelationsTo() {
		return this.relationsTo;
	}

	/**
	 * Adds a single element to the relationsTo collection
	 *
	 * @param element The element to add.
	 */
	public void addToRelationsTo(RelationDto element) {

		if (element == null || this.relationsTo.contains(element)) {
			return;
		}
		this.relationsTo.add(element);
	}

	/**
	 * Removes a single element from the relationsTo collection.
	 * 
	 * @param element The element to be removed.
	 */
	public void removeFromRelationsTo(RelationDto element) {

		if (element == null) {
			return;
		}
		this.relationsTo.remove(element);
	}

	/**
	 * Sets all attributes that have a default value, to their default values.
	 *
	 * @author Generated by Mod4j
	 */
	public void clear() {
		firstName = null;
		lastName = null;
		birthDate = null;

	}

	/**
	 * toString method for PersonDto
	 */
	@Override
	public String toString() {
		StringBuffer result = new StringBuffer();
		result.append("org.company.webshop.service.dto.PersonDto[");
		result.append("id=");
		result.append(getId());
		result.append(",");
		result.append("version=");
		result.append(getVersion());

		result.append(",");
		result.append("firstName=");
		result.append(firstName);

		result.append(",");
		result.append("lastName=");
		result.append(lastName);

		result.append(",");
		result.append("birthDate=");
		result.append(birthDate);

		result.append("]");
		return result.toString();
	}

}
